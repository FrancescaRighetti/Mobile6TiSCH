//
// Generated file, do not edit! Created by opp_msgtool 6.0 from tsch/tschpkt/tschpkt.msg.
//

#ifndef __TSCHPKT_M_H
#define __TSCHPKT_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0600
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif

class TSCHPkt;
/**
 * Class generated from <tt>tsch/tschpkt/tschpkt.msg:16</tt> by opp_msgtool.
 * <pre>
 * packet TSCHPkt
 * {
 *     int src;
 *     int dest;
 *     int seqNum;
 * }
 * </pre>
 */
class TSCHPkt : public ::omnetpp::cPacket
{
  protected:
    int src = 0;
    int dest = 0;
    int seqNum = 0;

  private:
    void copy(const TSCHPkt& other);

  protected:
    bool operator==(const TSCHPkt&) = delete;

  public:
    TSCHPkt(const char *name=nullptr, short kind=0);
    TSCHPkt(const TSCHPkt& other);
    virtual ~TSCHPkt();
    TSCHPkt& operator=(const TSCHPkt& other);
    virtual TSCHPkt *dup() const override {return new TSCHPkt(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    virtual int getSrc() const;
    virtual void setSrc(int src);

    virtual int getDest() const;
    virtual void setDest(int dest);

    virtual int getSeqNum() const;
    virtual void setSeqNum(int seqNum);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const TSCHPkt& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, TSCHPkt& obj) {obj.parsimUnpack(b);}


namespace omnetpp {

template<> inline TSCHPkt *fromAnyPtr(any_ptr ptr) { return check_and_cast<TSCHPkt*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __TSCHPKT_M_H

