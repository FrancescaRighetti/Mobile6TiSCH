//
// Generated file, do not edit! Created by opp_msgtool 6.0 from physicallayer/radio/packetcontrolinfo/packetcontrolinfo.msg.
//

#ifndef __PACKETCONTROLINFO_M_H
#define __PACKETCONTROLINFO_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0600
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif

class PacketControlInfo;
/**
 * Class generated from <tt>physicallayer/radio/packetcontrolinfo/packetcontrolinfo.msg:16</tt> by opp_msgtool.
 * <pre>
 * packet PacketControlInfo
 * {
 *     int srcMacAddress;
 *     int messageId;
 *     double rssi;
 *     double delay;
 * }
 * </pre>
 */
class PacketControlInfo : public ::omnetpp::cPacket
{
  protected:
    int srcMacAddress = 0;
    int messageId = 0;
    double rssi = 0;
    double delay = 0;

  private:
    void copy(const PacketControlInfo& other);

  protected:
    bool operator==(const PacketControlInfo&) = delete;

  public:
    PacketControlInfo(const char *name=nullptr, short kind=0);
    PacketControlInfo(const PacketControlInfo& other);
    virtual ~PacketControlInfo();
    PacketControlInfo& operator=(const PacketControlInfo& other);
    virtual PacketControlInfo *dup() const override {return new PacketControlInfo(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    virtual int getSrcMacAddress() const;
    virtual void setSrcMacAddress(int srcMacAddress);

    virtual int getMessageId() const;
    virtual void setMessageId(int messageId);

    virtual double getRssi() const;
    virtual void setRssi(double rssi);

    virtual double getDelay() const;
    virtual void setDelay(double delay);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const PacketControlInfo& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, PacketControlInfo& obj) {obj.parsimUnpack(b);}


namespace omnetpp {

template<> inline PacketControlInfo *fromAnyPtr(any_ptr ptr) { return check_and_cast<PacketControlInfo*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __PACKETCONTROLINFO_M_H

